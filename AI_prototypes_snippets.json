" Szablon AI ": {
	  "prefix": "modelAIwzór",
	  "body": [
		"#===Importy===",
		"import numpy as np",
		"from sklearn.model_selection import train_test_split",
		"from sklearn.linear_model import LogisticRegresion # Można podmienić na inny model",
		"# Przygotowywanie danych",
		"def load_data():",
		" Tu załaduj dane lub wygeneruj przykładowe",
		"    x = np.random.rand(100,5) # 100 próbek, 5 cech",
		"    y = np.random.randint(0,2,size = 100)  # Klasy binarne",
		"#===Budowa Modelu===",
		"class AIModel:",
		"   def __init__(self):",
		"     self.model = LogisticRegresion()",
		"   def train(self, X_train, y_train)",
		"       self.model.fit(X_train, y_train)",
		"def predict(self, X_test):",
		"    return self.model.predict(X_test)",
		"def evaluate(self,X_test,y_test):",
		" score = self.model.score(X_test, y_test)",
		" print(f'Acuracy: {score: .2f}')",
		"#===Główna Logika ===",
		"def main():",
		"     X, y = load_data()",
		"     X_train , X_test, y_train, y_test = train_test_split(X,y test_size = 0.2)",
		"     model = AIModel()",
		"     model.train(X_train, y_train)",
		"     predictions = model.predict(X_test)",
		"     model.evaluate(X_test, y_test)",
		"",
		"# ====Punkt WEJŚCIA ===",
		"if __name__ =='main'",
		"   main()",
	  ],
	  "description": "Model AI z użyciem sticky learn"
	},
